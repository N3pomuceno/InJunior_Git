git help: Mostra vários comandos de forma resumida

git help <comando>: Mostra detalhes de um comando específico

git config --global user.name “Seu Nome” : Adiciona o nome do usuário que está utilizando o git
git config --global user.email “seuemaill@gmail.com”   (Usar o mesmo email do gitlab) : Adiciona o email do usuário que está utilizando o git
 
Para o repositório atual: --local;
Para o Usuário: --global;
Para o Computador: --system

Opcional:
(primeiro testa code -v)
git config --global core.editor 'code --wait' -> Vscode para editor padrão (precisa do code no PATH)


	Se tudo der certo:
	git config --global -e -> Abre o arquivo de configuração no vscode

-------------------------------------------------------


git init : Inicializa o git no repositório atual.

git status : Verifica os status de acompanhamento dos diretórios e arquivos do repositório atual.

git add arquivo/diretório : Adiciona o arquivo àqueles que estão preparados para serem commitados.
git add --all = git add . : Adiciona todo arquivo e diretório para serem commitados.

git commit -m “Primeiro commit” : Comando para fazer o commit com a descrição de "Primeiro commit".

-------------------------------------------------------

git log : Função que mostra o histórico de commits de forma detalhada.
git log arquivo : Função que mostra o histórico de commits de forma detalhada do arquivo. 
git reflog : Função que mostra o histórico de commits de forma compacta.

-------------------------------------------------------

git show : Função que mostra objetos, pode ser commits, árvores e tags.
git show <commit> : Função que mostra de forma ultra detalhada as modificações do commit.

-------------------------------------------------------

git diff : Faz a comparação entre o que está na área de trabalho e commit mais recente.
git diff <commit1> <commit2> : Faz a comparação entre os dois commits especificados, alterações em linhas, novos arquivos, etc.

-------------------------------------------------------

git reset --hard <commit> : Desfaz todas as alterações feitas até o commit especificado.

-------------------------------------------------------

git branch : Listagem de todas as branches locais.
git branch -r : Listagem de todas as branches remotas.
git branch -a : Mostra todas as branches, locais ou remotas.
git branch -d <branch_name> : Faz uma remoção de uma branch local.
git branch -D <branch_name> : Força uma remoção de uma branch local.
git branch -m <nome_novo> : Renomeia Branch atual.
git branch -m <nome_antigo> <nome_novo> : Renomeia a branch especificada no <nome_antigo> para <nome_novo>.

-------------------------------------------------------

git checkout <branch_name> : Muda para a outra branch.
git checkout -b <branch_name> : Cria uma nova branch e já faz um checkout para a mesma.

-------------------------------------------------------

git merge <branch_name> : Funde a branch atual com a branch especificada.

-------------------------------------------------------

git clone : Faz a clonagem do repositório dado pela URL ou pelo repositório local, para o repositório corrente.
git pull : Repositório local é atualizado com os dados do repositório remoto.
git push : Repositório remoto é atualizado com os dados commitados do repositório corrente.

-------------------------------------------------------

git remote -v : Faz a listagem dos servidores remotos que o repositório está usando associados com a URL.
git remote add origin <url> : Adiciona um repositório remoto com o nome de "origin" dpa url definida.
git remote <url> origin : Faz a troca da URL do servidor 'origin' para a nova URL informada.

--------------------------------------------------------

Documentação do git:
https://git-scm.com/doc

Playlist GIT:
https://www.youtube.com/playlist?list=PLucm8g_ezqNq0dOgug6paAkH0AQSJPlIe

Vídeo sobre Git: 
https://www.youtube.com/watch?v=kB5e-gTAl_s


